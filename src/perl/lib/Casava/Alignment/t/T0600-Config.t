=head1 LICENSE

Copyright (c) 2007-2011 Illumina, Inc.

This software is covered by the "Illumina Genome Analyzer Software 
License Agreement" and the "Illumina Source Code License Agreement", 
and certain third party copyright/licenses, and any user of this 
source file is bound by the terms therein (see accompanying files
Illumina_Genome_Analyzer_Software_License_Agreement.pdf and
Illumina_Source_Code_License_Agreement.pdf and third party 
copyright/license notices).

This file is part of the Consensus Assessment of Sequence And VAriation
(CASAVA) software package.

=head1 NAME

Config-perlunit-06.t

=head1 SYNOPSIS

perl -I/path/to/CASAVA/src/perl/lib Config-perlunit-06.t

=head1 DESCRIPTION

This script unit-tests the Gerald::Config module.

=head1 DIAGNOSTICS

=head2 Exit status

0: successful completion
1: abnormal completion
2: fatal error

=head2 Errors

All error messages are prefixed with "ERROR: ". The most common error messages are:

=over 4

=item unknown command line option

read this document for the list of command line options

=back

=head2 Warnings

All warning messages generated by CASAVA are prefixed with "WARNING: ". The most common warnings are:

=over 4

=item "Did not specify any value for EXPT_DIR"

The base call directory has not been specified

=back

=head1 CONFIGURATION AND ENVIRONMENT

Name and location of configuration files, with a complete description of the properties that can be set.

Name and description of the relevant environment variables

=head1 DEPENDENCIES

Standard perl modules: strict, warnings, Carp, Getopt::Long, Pod::Usage 

External perl modules: XML::Simple

CASAVA perl modules: Gerald::Config

=head1 BUGS AND LIMITATIONS

There are no known bugs in this module.

All documented features are fully implemented.

Please report problems to Illumina Technical Support (support@illumina.com)

Patches are welcome.

=head1 AUTHOR

Come Raczy

=cut

use strict;
use Carp;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Test::More tests => 76;

BEGIN 
{
    use_ok('Casava::Alignment::Config');
}

my $config = Casava::Alignment::Config->new;
isa_ok( $config, 'Casava::Alignment::Config' );

# loading xml data
my $xmlData = <<'EOF';
<?xml version="1.0"?>
<RunParameters>
  <Barcodes>
  </Barcodes>
  <Defaults></Defaults>
  <Lanes>
    <Lane index="2">
      <Defaults></Defaults>
      <Projects>
        <Project name="MyProject">
          <SOME_VAR>123</SOME_VAR>
        </Project>
      </Projects>
    </Lane>
    <Lane index="6">
      <Defaults></Defaults>
      <Projects>
        <Project name="MyProject">
          <SOME_VAR>123</SOME_VAR>
        </Project>
      </Projects>
    </Lane>
  </Lanes>
  <Projects>
  </Projects>
  <References>
  </References>
  <Samples>
  </Samples>
  <Version>@CASAVA_VERSION_FULL@</Version>
</RunParameters>
EOF

#loading txt data
my $txtData = <<'EOF';

#

26:PROJECT MyProject SOME_VAR 123

EOF


# loading GERALD.xml data
my $geraldXml = <<'EOF';
<?xml version='1.0' standalone='yes'?>
<!-- @(#) $Id$ -->
<GeraldConfigParameters>
<DefaultRunParameters>
<!-- Any site-wide definitions for your site go here -->
  <INSTRUMENT />
  <RUN_NUMBER />
  <WITH_EAMSS>true</WITH_EAMSS>
  <LANE_DIR>$(shell $(PRINTF) "L%03i" $(lane:s_%=%))</LANE_DIR>
  <WITH_SORTED>false</WITH_SORTED>
  <WITH_SEQUENCE>false</WITH_SEQUENCE>
  <KEEP_INTERMEDIARY>false</KEEP_INTERMEDIARY>
</DefaultRunParameters>
</GeraldConfigParameters>
EOF


open my $handle, "<", \$txtData;
$config = Casava::Alignment::Config->new;
$config->readTxt($handle);

is ($xmlData, $config->toXml, 'Checking output xml');
is ('123', $config->getVariable(name => 'SOME_VAR', lane => 2, section => 'Project', which => 'MyProject'), 'Checking variable value for lane 2/Project MyProject');

open $handle, "<", \$geraldXml;
$config->loadDefaults($handle);
my %defaultVariables = $config->getDefaultVariables;

is (7, keys %defaultVariables, 'checking that there is the expected number of default variables');
is ('true', $config->getVariable(name => 'WITH_EAMSS'), 'Checking value for default variable WITH_EAMSS');

1;
__END__

