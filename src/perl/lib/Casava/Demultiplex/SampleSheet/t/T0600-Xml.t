=head1 LICENSE

Copyright (c) 2007-2009 Illumina, Inc.

This source file is covered by the "Illumina Public Source License"
agreement and bound by the terms therein.

This file is part of the Consensus Assessment of Sequence And VAriation
(CASAVA) software package.

=head1 NAME

SampleSheet-perlunit-06.t

=head1 SYNOPSIS

perl SampleSheet-perlunit-06.t

=head1 DESCRIPTION

This script unit-tests the SampleSheet module.

=head1 DIAGNOSTICS

=head2 Exit status

0: successful completion
1: abnormal completion
2: fatal error

=head2 Errors

All error messages are prefixed with "ERROR: ". The most common error messages are:

=item unknown command line option

read this document for the list of command line options

=head2 Warnings

All warning messages generated by CASAVA are prefixed with "WARNING: ". The most common warnings are:

=item "Did not specify any value for EXPT_DIR"

The base call directory has not been specified

=head1 CONFIGURATION AND ENVIRONMENT

Name and location of configuration files, with a complete description of the properties that can be set.

Name and description of the relevant environment variables

=head1 DEPENDENCIES

Standard perl modules: strict, warnings, Carp, Getopt::Long, Pod::Usage 

External perl modules: XML::Simple

CASAVA perl modules: Casava::Alignment

=head1 BUGS AND LIMITATIONS

There are no known bugs in this module.

All documented features are fully implemented.

Please report problems to Illumina Technical Support (support@illumina.com)

Patches are welcome.

=head1 AUTHOR

Come Raczy

=cut

use strict;
use Carp;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Test::More tests => 76;
BEGIN 
{
    use_ok('Casava::Demultiplex::SampleSheet');
}

my $sampleSheet = Casava::Demultiplex::SampleSheet->new();
isa_ok( $sampleSheet, 'Casava::Demultiplex::SampleSheet' );


# loading xml data
my $xmlData = <<EOF;
<?xml version="1.0"?> 
<FlowcellInfo ID="FC000123">
  <Lane Number="1">
    <Sample SampleID="sample1" Ref="human" Index="AAGTGTC" Desc="some, desc1" Control="N" />
    <Sample SampleID="sample2" Ref="human" Index="GGTCATA" Desc="more, desc2" Control="N" />
  </Lane>
  <Lane Number="2">
    <Sample SampleID="sample3" Ref="human" Index="CCTGAAA" Desc="desc3" Control="N" />
    <Sample SampleID="sample4" Ref="mouse" Index="GGGAATT" Desc="desc4" Control="N" />
  </Lane>
</FlowcellInfo>
EOF

open my $handle, "<", \$xmlData;
$sampleSheet = Casava::SampleSheet->new;
$sampleSheet->loadXml($handle);

# checking the data added from the XML file

is ($sampleSheet->sampleId(1, 'AAGTGTC'), 'sample1', 'Checking sample id');
is ($sampleSheet->species(1, 'AAGTGTC'), 'human', 'Checking species');
is ($sampleSheet->description(1, 'AAGTGTC'), 'some, desc1', 'Checking description');
is ($sampleSheet->control(1, 'AAGTGTC'), 'N', 'Checking control');

is ($sampleSheet->sampleId(1, 'GGTCATA'), 'sample2', 'Checking sample id');
is ($sampleSheet->species(1, 'GGTCATA'), 'human', 'Checking species');
is ($sampleSheet->description(1, 'GGTCATA'), 'more, desc2', 'Checking description');
is ($sampleSheet->control(1, 'GGTCATA'), 'N', 'Checking control');

is ($sampleSheet->sampleId(2, 'CCTGAAA'), 'sample3', 'Checking sample id');
is ($sampleSheet->species(2, 'CCTGAAA'), 'human', 'Checking species');
is ($sampleSheet->description(2, 'CCTGAAA'), 'desc3', 'Checking description');
is ($sampleSheet->control(2, 'CCTGAAA'), 'N', 'Checking control');

is ($sampleSheet->sampleId(2, 'GGGAATT'), 'sample4', 'Checking sample id');
is ($sampleSheet->species(2, 'GGGAATT'), 'mouse', 'Checking species');
is ($sampleSheet->description(2, 'GGGAATT'), 'desc4', 'Checking description');
is ($sampleSheet->control(2, 'GGGAATT'), 'N', 'Checking control');

is ($sampleSheet->laneNumbers, 2,'Checking that there are three lanes');
is ($sampleSheet->barcodes(1), 2, 'Checking that lane 1 has 2 barcode');
is ($sampleSheet->barcodes(2), 2, 'Checking that lane 2 has 2 barcode');


1;
__END__

